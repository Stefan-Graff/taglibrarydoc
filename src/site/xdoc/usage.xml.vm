<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>Usage Instructions</title>
    </properties>

    <body>

        <section name="Usage Instructions">
            <p>To use the Tag Library Documentation Generator, first, build the
                tool using the above instructions or download a precompiled binary,
                and make sure you can run it. Then, follow the instructions below.
                The first set of instructions assumes you are using JDK 8 or
                greater.</p>

            <subsection name="Generating Tag Library documentation">
                <p>First, locate the tag libraries you wish to generate
                    documentation for. You can generate documentation for a single TLD
                    file, a set of TLD files, a JAR file, a WAR file, a directory of
                    tag files, or all the tag libraries in a web application. Then,
                    simply invoke as follows:</p>
                <source>java -jar tlddoc-${project.version}.jar -d &lt;outdir&gt; &lt;tlds&gt;</source>
                <p>Where &lt;outdir&gt; is the directory in which to produce the
                    output and &lt;tlds&gt; is the list of files or directories to
                    examine. The -doctitle and -windowtitle options can be used to
                    customize the title for the index and the browser window title,
                    respectively. You can run with -help to list all options.</p>
            </subsection>

            <subsection name="Customizing the Output">
                <p>The look and feel of the output can be customized. The generator
                    collects all the information from various tag libraries into a
                    single XML document, annotates it in various ways, and then runs
                    that document through a number of XSLT stylesheets to produce the
                    final output. You can edit or replace the XSLT stylesheets to
                    change how the output looks or the way it is structured.</p>
                <p>To do this, first extract the contents of tlddoc-${project.version}.jar
                    to an empty directory. Then, edit the files in
                    com/sun/tlddoc/resources/* to change the output. Finally, run with
                    the -xslt option, pointing to the directory with the modified files.
                    For any file that does not appear in the directory pointed to by
                    -xslt, the default file will be used instead.</p>
            </subsection>

            <subsection name="Running With Ant">
                <p>You can run the Tag Library Documentation Generator in ant as part
                    of your build process using the
                    <code>&lt;java&gt;</code>
                    task. Just add the following code to your
                    <code>build.xml</code>.</p>
                <p>Using JDK 8 or greater:</p>
                <source>&lt;java fork="true" jar="${tlddoc.path}/tlddoc-${project.version}.jar"
      failonerror="true"&gt;
  &lt;arg line="-d ${build}/taglibs/doc"/&gt;
  &lt;arg value="${src}/taglibs/tld/my1.tld"/&gt;
  &lt;arg value="${src}/taglibs/tld/my2.tld"/&gt;
  &lt;arg value="${src}/taglibs/tld/my3.tld"/&gt;
&lt;/java&gt;</source>
            </subsection>

            <subsection name="Running With Maven">
                <p>You can run the Tag Library Documentation Generator in maven as part
                    of your build process using the maven-plugin
                    <code>taglib-maven-plugin</code>, which you can find at
                    <a href="https://github.com/ste-gr/taglib-maven-plugin">
                        GitHub
                    </a>.</p>
            </subsection>

        </section>

    </body>

</document>